%--------------------------------------------------------------------------
%UNIVERSIDADE FEDERAL DE PERNAMBUCO
%CENTRO DE TECNOLOGIA E GEOCIENCIAS
%PROGRAMA DE POS GRADUACAO EM ENGENHARIA CIVIL
%TOPICOS ESPECIAIS EM DINAMICA DOS FLUIDOS COMPUTACIONAL
%--------------------------------------------------------------------------
%Subject: numerical routine to solve hyperbolic scalar equation with 
%high-order resolution 
%Type of file: FUNCTION
%Criate date: 18/01/2014
%Modify data:   /  /2014
%Advisor: Paulo Lyra and Darlan Karlo
%Programer: Márcio Souza
%Modified: Fernando Contreras,
%--------------------------------------------------------------------------
%Goals:
%Calculate the Saturation Field. It chooses the time approximation 
%according to user set:
%1. Progressive Euler;
%2 - 4. Runge-Kutta (2nd to 4th order).

%--------------------------------------------------------------------------
%Additional comments: 
%

%--------------------------------------------------------------------------

function [newSw,orderintimestep,waterflowrate,oilflowrate,earlysw,Sleft,Sright] = ...
    solveSaturation(Sw,flowrateadvec,flowratedif,dt,injecelem,producelem,satinbound,...
    Fg,flagknownvert,satonvertices,flagknownedge,satonedges,flowresult,...
    wvector,wmap,constraint,lsw,limiterflag,mobility,massweigmap,...
    othervertexmap,swsequence,ntriang,areatriang,prodwellbedg,...
    prodwellinedg,mwmaprodelem,vtxmaprodelem,coordmaprodelem,...
    amountofneigvec,rtmd_storepos,rtmd_storeleft,rtmd_storeright,...
    isonbound,elemsize,bedgesize,inedgesize,gamma,time)

        

       
%Define global parameters:
global timeorder numcase elemarea;

%Initialize "waterflowrate" and "oilflowrate"
waterflowrate = 0;
oilflowrate = 0;

%According "rungekuttakey" the order of time approach changes.
switch timeorder
    %Use Progressive Euler First-Order (one level)
    case 1
        %Call the hyperbolic operator (1 step)
        [newSw,orderintimestep,earlysw,Sleft,Sright] = calcnewsatfield(Sw,flowrateadvec,flowratedif,dt,...
            injecelem,producelem,satinbound,Fg,flagknownvert,satonvertices,...
            flagknownedge,massweigmap,othervertexmap,satonedges,wvector,...
            wmap,constraint,lsw,limiterflag,mobility,flowresult,swsequence,...
            ntriang,areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize,gamma,time);    
        
    %Use Runge-Kutta Second-Order (two levels)
    case 2
        %First level:
        [Swrk1,orderintimestep,earlysw,Sleft,Sright] = ...
            calcnewsatfield(Sw,flowrateadvec,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize,gamma);    

        %Second level:
        [Swrk2,orderintimestep,earlysw,Sleft,Sright] = ...
            calcnewsatfield(Swrk1,flowrateadvec,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize,gamma);    

        %Calculate the new Saturation Field.
        newSw = (1/2).*(Sw + Swrk2);

    %Use Runge-Kutta Third-Order (three levels)
    case 3
        %First level:
        [Swrk1,orderintimestep,earlysw,Sleft,Sright] = ...
            calcnewsatfield(Sw,flowrateadvec,flowratedif,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize,gamma);    

        %Second level:
        [Swrk2,orderintimestep,earlysw,Sleft,Sright] = ...
            calcnewsatfield(Swrk1,flowrateadvec,flowratedif,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize,gamma);    
        
        %Calculate a resultant Saturation Field
        Swres12 = (3/4).*Sw + (1/4).*Swrk2;

        %Third level:
        [Swrk3,oorderintimestep,earlysw,Sleft,Sright] = ...
            calcnewsatfield(Swres12,flowrateadvec,flowratedif,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize,gamma);    

        %Calculate the new Saturation Field.
        newSw = (1/3).*(Sw + 2.*Swrk3);

    %Use Runge-Kutta Fourth-Order (four levels). It was obtained from
    %Gottlied, Shu and Tadmor (2001)
    case 4
        %First level:
        [Swrk1,] = ...
            calcnewsatfield(Sw,flowrate,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize);    

        %Second level:
        [Swrk2,] = ...
            calcnewsatfield(Swrk1,flowrate,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize);    

        %Third level:
        [Swrk3,] = ...
            calcnewsatfield(Swrk2,flowrate,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize);    

        %Fourth level:
        [Swrk4,orderintimestep,earlysw] = ...
            calcnewsatfield(Swrk3,flowrate,dt,injecelem,producelem,...
            satinbound,Fg,flagknownvert,satonvertices,flagknownedge,...
            massweigmap,othervertexmap,satonedges,wvector,wmap,constraint,...
            lsw,limiterflag,mobility,flowresult,swsequence,ntriang,...
            areatriang,prodwellbedg,prodwellinedg,mwmaprodelem,...
            vtxmaprodelem,coordmaprodelem,amountofneigvec,...
            rtmd_storepos,rtmd_storeleft,rtmd_storeright,isonbound,...
            elemsize,bedgesize,inedgesize);    

        %Calculate the new Saturation Field.
        newSw = (3/8)*Sw + (1/3)*Swrk1 + (1/4)*Swrk2 + (1/8)*Swrk4;
end  %End of SWITCH (time order)

%--------------------------------------------------------------------------
%Define the flow rate of WATER and OIL in the producer well(s)
%Verify if there is producer wells

if any(producelem)
    %Get the area of all elements associated to producer wells
%     totalprodarea = sum(elemarea(producelem));
    %Calculate the fractional flow for the producer elements
    
    %Swept all producer elements
    for iprod = 1:length(producelem)
        %Get a relative area
%         relatarea = elemarea(producelem(iprod))/totalprodarea;
        %Catch the oil flow rate in producer well
        oilflowrate = oilflowrate + newSw(producelem(iprod))*flowresult(producelem(iprod));
        %Catch the water flow rate in producer well
        waterflowrate = waterflowrate + newSw(producelem(iprod))*flowresult(producelem(iprod));
    end  %End of FOR (producer wells)
end  %End of IF

%It ensures that the flow rate is a positive quantity
%For Oil:
oilflowrate = abs(oilflowrate);
%For Water:
waterflowrate = abs(waterflowrate);


